<!DOCTYPE html>
<html lang="zh-TW">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>設定帳號密碼 - 公益慈善會員系統</title>
<link rel="stylesheet" href="./assets/style.css">
<script src="https://static.line-scdn.net/liff/edge/2/sdk.js"></script>
<script src="./assets/security-utils.js"></script>
<script src="./assets/api-config.js"></script>
<script src="./assets/session-manager.js"></script>
<style>
  body {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    padding: 20px;
  }
  
  .container {
    max-width: 520px;
    margin: 0 auto;
  }
  
  .card {
    background: white;
    border-radius: 20px;
    box-shadow: 0 10px 40px rgba(0,0,0,0.2);
    overflow: hidden;
  }
  
  .card-header {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    padding: 32px 24px;
    text-align: center;
  }
  
  .card-header h2 {
    margin: 0 0 8px 0;
    font-size: 24px;
  }
  
  .card-header p {
    margin: 0;
    font-size: 14px;
    opacity: 0.95;
  }
  
  .card-body {
    padding: 32px 24px;
  }
  
  .message {
    padding: 12px 16px;
    border-radius: 10px;
    margin-bottom: 16px;
    font-size: 14px;
    display: none;
  }
  
  .message.success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }
  
  .message.error {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }
  
  .message.info {
    background: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
  }
  
  .form-group {
    margin-bottom: 20px;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #333;
    font-size: 14px;
  }
  
  .form-group input {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e0e0e0;
    border-radius: 10px;
    font-size: 15px;
    transition: all 0.3s;
  }
  
  .form-group input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }
  
  .form-group small {
    display: block;
    margin-top: 4px;
    font-size: 12px;
    color: #666;
  }
  
  .btn {
    width: 100%;
    padding: 14px;
    border: none;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    text-decoration: none;
    text-align: center;
    display: block;
  }
  
  .btn-primary {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
  }
  
  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
  }
  
  .btn-primary:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
  
  .btn-secondary {
    background: white;
    color: #667eea;
    border: 2px solid #667eea;
    margin-top: 12px;
  }
  
  .btn-secondary:hover {
    background: #f8f9ff;
  }
  
  .divider {
    height: 1px;
    background: #e0e0e0;
    margin: 24px 0;
  }
  
  .info-box {
    background: #f8f9fa;
    border-left: 4px solid #667eea;
    padding: 16px;
    border-radius: 8px;
    margin-bottom: 24px;
  }
  
  .info-box h3 {
    margin: 0 0 8px 0;
    font-size: 16px;
    color: #333;
  }
  
  .info-box p {
    margin: 0;
    font-size: 14px;
    color: #666;
    line-height: 1.6;
  }
</style>
</head>
<body>
<div class="container">
  <div class="card">
    <div class="card-header">
      <h2>🔐 設定帳號密碼</h2>
      <p>設定後即可使用帳號密碼登入</p>
    </div>
    
    <div class="card-body">
      <div id="message" class="message"></div>
      
      <div class="info-box">
        <h3>💡 為什麼要設定帳號密碼？</h3>
        <p>設定帳號密碼後，您就可以：</p>
        <ul style="margin: 8px 0 0 0; padding-left: 20px; color: #666; font-size: 14px; line-height: 1.8;">
          <li>在非 LINE 環境下登入系統</li>
          <li>在電腦網頁版登入</li>
          <li>擁有雙重登入方式，更方便安全</li>
        </ul>
      </div>
      
      <form id="setPasswordForm" onsubmit="handleSetPassword(event)">
        <div class="form-group">
          <label for="username">登入帳號 *</label>
          <input type="text" id="username" required 
                 placeholder="例如：user123"
                 pattern="[a-zA-Z0-9]{4,20}"
                 minlength="4" maxlength="20">
          <small>4-20 個字元，僅限英文字母和數字</small>
        </div>
        
        <div class="form-group">
          <label for="password">密碼 *</label>
          <input type="password" id="password" required 
                 placeholder="至少 6 個字元"
                 minlength="6">
          <small>至少 6 個字元</small>
        </div>
        
        <div class="form-group">
          <label for="confirmPassword">確認密碼 *</label>
          <input type="password" id="confirmPassword" required 
                 placeholder="再次輸入密碼"
                 minlength="6">
        </div>
        
        <button type="submit" class="btn btn-primary" id="submitBtn">
          設定帳號密碼
        </button>
      </form>
      
      <div class="divider"></div>
      
      <a href="profile.html" class="btn btn-secondary">返回會員中心</a>
    </div>
  </div>
</div>

<script>
let currentUserId = '';

async function initLiff() {
  try {
    await liff.init({ liffId: "2008231108-2PDbO5qk" });
    
    if (!liff.isLoggedIn()) {
      liff.login({ redirectUri: window.location.href });
      return;
    }
    
    const profile = await liff.getProfile();
    currentUserId = profile.userId;
    
    console.log('當前用戶 ID:', currentUserId);
    
    // 檢查用戶是否已經設定過帳號密碼
    await checkExistingPassword();
    
  } catch (error) {
    console.error('LIFF 初始化錯誤:', error);
    showMessage('初始化失敗：' + error.message, 'error');
  }
}

async function checkExistingPassword() {
  try {
    const response = await fetch(`${API_URL}?action=getMember&lineUserId=${currentUserId}`);
    const data = await response.json();
    
    console.log('用戶資料:', data);
    
    if (data.success && data.user) {
      const loginType = data.user.loginType || 'line';
      
      if (loginType === 'both') {
        showMessage('✅ 您已經設定過帳號密碼了！<br>目前帳號：' + (data.user.username || '未知'), 'info');
        document.getElementById('setPasswordForm').style.display = 'none';
      } else if (loginType === 'password') {
        showMessage('⚠️ 您已經有帳號密碼了', 'info');
        document.getElementById('setPasswordForm').style.display = 'none';
      }
    }
  } catch (error) {
    console.error('檢查失敗:', error);
    // 不顯示錯誤，允許繼續設定
  }
}

async function handleSetPassword(event) {
  event.preventDefault();
  
  const username = SecurityUtils.sanitize.trim(document.getElementById('username').value);
  const password = document.getElementById('password').value;
  const confirmPassword = document.getElementById('confirmPassword').value;
  
  // 驗證帳號格式
  if (!/^[a-zA-Z0-9]{4,20}$/.test(username)) {
    showMessage('帳號格式錯誤：請使用 4-20 個英文字母或數字', 'error');
    return;
  }
  
  // 驗證密碼
  if (password !== confirmPassword) {
    showMessage('兩次輸入的密碼不一致', 'error');
    return;
  }
  
  if (password.length < 6) {
    showMessage('密碼至少需要 6 個字元', 'error');
    return;
  }
  
  const btn = document.getElementById('submitBtn');
  btn.disabled = true;
  btn.textContent = '設定中...';
  
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action: 'add-password',
        lineUserId: currentUserId,
        username: username,
        password: password
      })
    });
    
    const result = await response.json();
    console.log('設定結果:', result);
    
    if (result.success) {
      showMessage('✅ ' + result.message + '<br>帳號：' + username, 'success');
      document.getElementById('setPasswordForm').style.display = 'none';
      
      setTimeout(() => {
        window.location.href = 'profile.html';
      }, 2000);
    } else {
      showMessage('❌ ' + (result.message || '設定失敗'), 'error');
      btn.disabled = false;
      btn.textContent = '設定帳號密碼';
    }
  } catch (error) {
    console.error('設定錯誤:', error);
    showMessage('設定失敗：' + error.message, 'error');
    btn.disabled = false;
    btn.textContent = '設定帳號密碼';
  }
}

function showMessage(msg, type) {
  const messageDiv = document.getElementById('message');
  messageDiv.innerHTML = msg;
  messageDiv.className = `message ${type}`;
  messageDiv.style.display = 'block';
  
  // 滾動到訊息位置
  messageDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
}

window.addEventListener('load', initLiff);
</script>
</body>
</html>

